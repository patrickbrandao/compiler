#!/bin/sh

#@90
#&90

ZEBRA=0

OSPF=0
RIP=0
ISIS=0

OSPFV3=0
RIPNG=0


BGP=0

_abort(){
	logitc -n "[quagga] Abortado. "; echoc -c yellow -l "$@"
	exit 1
}

_service(){
	sname="$1"
	act="$2"

	cmd="$sname"
	port=2601

	# porta e nome do arquivo
	if [ "$sname" = "zebra" ]; then port=2601; cfile="zebra"; fi
	if [ "$sname" = "ripd" ]; then port=2602; cfile="ripd"; fi
	if [ "$sname" = "ripngd" ]; then port=2603; cfile="ripngd"; fi
	if [ "$sname" = "ospfd" ]; then port=2604; cfile="ospfd"; fi
	if [ "$sname" = "bgpd" ]; then port=2605; cfile="bgpd"; fi
	if [ "$sname" = "ospf6d" ]; then port=2606; cfile="ospfv3d"; fi
	if [ "$sname" = "isisd" ]; then port=2607; cfile="isisd"; fi

	pid="/var/run/$sname.pid"
	cfg="/etc/router/$cfile.conf"

	logit -n "[quagga] $act $sname "

	# matar por seguranca
	for i in 1 2 3; do killall "$sname"; done 2>/dev/null

	# arquivo de config nao existe
	if [ ! -f "$cfg" ]; then echo; _abort "Configuracao '$cfg' nao existe"; fi

	# iniciar se necessario
	if [ "$act" = "start" -o "$act" = "restart" ]; then
		runcmd="$cmd -A 127.0.0.1 --daemon -f $cfg -i $pid -P $port -u root -g root"
		$runcmd; stdno="$?"
		if [ "$stdno" != "0" ]; then
			echo
			_abort "Erro $? ao iniciar $sname: $runcmd"
		fi
	fi
	echo_ok
}

quagga_start() {
	if [ "$ZEBRA" = "1" ]; then _service zebra start; else return 0; fi
	sleep 2
	if [ "$OSPF" = "1" ]; then _service ospfd start; fi
	if [ "$OSPFV3" = "1" ]; then _service ospfv3 start; fi
	if [ "$RIP" = "1" ]; then _service ripd start; fi
	if [ "$RIPNG" = "1" ]; then _service ripngd start; fi
	if [ "$ISIS" = "1" ]; then _service isisd start; fi
	if [ "$BGP" = "1" ]; then _service bgpd start; fi
}

quagga_stop() {
	logit2 -n "[quagga]" "Parando"
	for i in 1 2 3; do
		killall zebra ospfd bgpd ospf6d 2>/dev/null
		echoc -c cyan -n "."
		killall zebra 2>/dev/null
		echoc -c cyan -n "."
		killall ospfd 2>/dev/null
		echoc -c cyan -n "."
		killall bgpd 2>/dev/null
		echoc -c cyan -n "."
		killall ospf6d 2>/dev/null
		echoc -c cyan -n "."
		killall isisd 2>/dev/null
		echoc -c cyan -n "."
	done
	echo_ok
}

quagga_restart() {
	quagga_stop
	sleep 2
	quagga_start
}

case "$1" in
	'start')
		quagga_start
		;;

	'stop')
		quagga_stop
		;;

	'restart')
		quagga_restart
		;;

	'service')
		_service $2 $3
		;;

	*)
		# Default is "start", for backwards compatibility with previous
		# Slackware versions.  This may change to a 'usage' error someday.
		quagga_start

esac







